// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// BayeSynGibbs
List BayeSynGibbs(arma::mat y_mat, arma::mat x_mat, List model_spec, List Alg_param, List Hyper_param);
RcppExport SEXP _synergysplines_BayeSynGibbs(SEXP y_matSEXP, SEXP x_matSEXP, SEXP model_specSEXP, SEXP Alg_paramSEXP, SEXP Hyper_paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type y_mat(y_matSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_mat(x_matSEXP);
    Rcpp::traits::input_parameter< List >::type model_spec(model_specSEXP);
    Rcpp::traits::input_parameter< List >::type Alg_param(Alg_paramSEXP);
    Rcpp::traits::input_parameter< List >::type Hyper_param(Hyper_paramSEXP);
    rcpp_result_gen = Rcpp::wrap(BayeSynGibbs(y_mat, x_mat, model_spec, Alg_param, Hyper_param));
    return rcpp_result_gen;
END_RCPP
}
// computeDelta
arma::mat computeDelta(List Delta_list, arma::vec x1, arma::vec x2);
RcppExport SEXP _synergysplines_computeDelta(SEXP Delta_listSEXP, SEXP x1SEXP, SEXP x2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type Delta_list(Delta_listSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x2(x2SEXP);
    rcpp_result_gen = Rcpp::wrap(computeDelta(Delta_list, x1, x2));
    return rcpp_result_gen;
END_RCPP
}
// logaccept
double logaccept(arma::mat y_mat, arma::vec p_ij_vec, arma::vec p_ij_vec_new, double s2_eps, double is_accept);
RcppExport SEXP _synergysplines_logaccept(SEXP y_matSEXP, SEXP p_ij_vecSEXP, SEXP p_ij_vec_newSEXP, SEXP s2_epsSEXP, SEXP is_acceptSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type y_mat(y_matSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p_ij_vec(p_ij_vecSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p_ij_vec_new(p_ij_vec_newSEXP);
    Rcpp::traits::input_parameter< double >::type s2_eps(s2_epsSEXP);
    Rcpp::traits::input_parameter< double >::type is_accept(is_acceptSEXP);
    rcpp_result_gen = Rcpp::wrap(logaccept(y_mat, p_ij_vec, p_ij_vec_new, s2_eps, is_accept));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_synergysplines_BayeSynGibbs", (DL_FUNC) &_synergysplines_BayeSynGibbs, 5},
    {"_synergysplines_computeDelta", (DL_FUNC) &_synergysplines_computeDelta, 3},
    {"_synergysplines_logaccept", (DL_FUNC) &_synergysplines_logaccept, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_synergysplines(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
